@model PainAssessment.Areas.ModuleTwo.Models.Checklist

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Checklist</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="checklistID" class="control-label"></label>
                <input asp-for="checklistID" class="form-control" />
                <span asp-validation-for="checklistID" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="checklistName" class="control-label"></label>
                <input asp-for="checklistName" class="form-control" />
                <span asp-validation-for="checklistName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="checklistDescription" class="control-label"></label>
                <input asp-for="checklistDescription" class="form-control" />
                <span asp-validation-for="checklistDescription" class="text-danger"></span>
            </div>
            <h3>Central</h3>
            <div>
                <table id="Central" class="table table-striped table-sm">
                    <thead>
                        <tr>
                            <th>
                                SubDomain
                            </th>
                            <th>
                                Determinant
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.Central.Count; i++)
                        {
            <tr class="centralRow"  id="addCentralRow-@i">
                <td>
                    @Html.EditorFor(x => x.Central[i].SubDomain, new { htmlAttributes = new { @class = "form-control" } })
                    @*<input asp-for="@item.SubDomain" class="form-control" />*@
                <td>
                    @Html.EditorFor(x => x.Central[i].Determinant, new { htmlAttributes = new { @class = "form-control" } })
                </td>
                <td>
                    <button id="addCentral-@i" type="button" class="btn btn-sm btn-primary visible" onclick="AddCentral(this)">Add</button>
                    <button id="removeCentral-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="RemoveCentral(this)">Remove</button>
                </td>
            </tr>}
                    </tbody>
                </table>
            </div>
            
            <input type="hidden" id="hiddenCentralLast" value="0" />

            <h3>Regional</h3>
            <table id="Regional" class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>
                            SubDomain
                        </th>
                        <th>
                            Determinant
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Regional.Count; i++)
                    {
        <tr class="regionalRow">
            <td>
                @Html.EditorFor(x => x.Regional[i].SubDomain, new { htmlAttributes = new { @class = "form-control" } })
                @*<input asp-for="@item.SubDomain" class="form-control" />*@
            <td>
                @Html.EditorFor(x => x.Regional[i].Determinant, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td>
                <button id="addRegional-@i" type="button" class="btn btn-sm btn-primary visible" onclick="AddRegional(this)">Add</button>
                <button id="removeRegional-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="RemoveRegional(this)">Remove</button>
            </td>
        </tr>}
                </tbody>
            </table>
            <input type="hidden" id="hiddenRegionalLast" value="0" />

            <h3>Local</h3>
            <table id="Local" class="table table-striped table-sm">
                <thead>
                    <tr>
                        <th>
                            SubDomain
                        </th>
                        <th>
                            Determinant
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < Model.Local.Count; i++)
                    {
        <tr class="localRow">
            <td>
                @Html.EditorFor(x => x.Local[i].SubDomain, new { htmlAttributes = new { @class = "form-control" } })
                @*<input asp-for="@item.SubDomain" class="form-control" />*@
            <td>
                @Html.EditorFor(x => x.Local[i].Determinant, new { htmlAttributes = new { @class = "form-control" } })
            </td>
            <td>
                <button id="addLocal-@i" type="button" class="btn btn-sm btn-primary visible" onclick="AddLocal(this)">Add</button>
                <button id="removeLocal-@i" type="button" class="btn btn-sm btn-danger invisible" onclick="RemoveLocal(this)">Remove</button>
            </td>
        </tr>
}
                </tbody>
            </table>
            <input type="hidden" id="hiddenLocalLast" value="0" />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">
        function RemoveCentral(btn) {
            //$(btn).closest('tr').remove();
            var rows = table.getElementsByTagName('tr');
            $(btn).remove()
        }

        function AddCentral(btn) {
            //get the table id - select the table
            var table = document.getElementById('Central');
            //get the rows of the table
            var rowList = table.getElementsByTagName('tr');

            //get the last row's html code (actual last row)
            var rowCode = rowList[rowList.length - 1].outerHTML;


            //get the last row id - where to add the next row
            var hiddenLast = document.getElementById('hiddenCentralLast').value;

            //index of the row to be added
            var hiddenRow = eval(hiddenLast) + 1;

            //set the value
            document.getElementById('hiddenCentralLast').value = hiddenRow;
            rowCode = rowCode.replaceAll('_' + hiddenLast + '_', '_' + hiddenRow + '_');
            rowCode = rowCode.replaceAll('[' + hiddenLast + ']', '[' + hiddenRow + ']');
            rowCode = rowCode.replaceAll('-' + hiddenLast, '-' + hiddenRow);

            //insert the row
            var newRow = table.insertRow();
            newRow.innerHTML = rowCode;

            //get the respective button id
            var addButtonId = btn.id;
            
            var deleteButtonId = addButtonId.replaceAll('addCentral', 'removeCentral');

            //set the add buttons to visible
            var deleteButton = document.getElementById(deleteButtonId);
            deleteButton.classList.add("visible");
            deleteButton.classList.remove("invisible");

            //set the add buttons to invisible
            var addButton = document.getElementById(addButtonId);
            addButton.classList.remove("visible");
            addButton.classList.add("invisible");

        }
        
        function RemoveRegional(btn) {
            //$(btn).closest('tr').remove();
            var rows = table.getElementsByTagName('tr');
            $(btn).remove()
        }

        function AddRegional(btn) {
            //get the table id - select the table
            var table = document.getElementById('Regional');
            //get the rows of the table
            var rowList = table.getElementsByTagName('tr');

            //get the last row's html code (actual last row)
            var rowCode = rowList[rowList.length - 1].outerHTML;


            //get the last row id - where to add the next row
            var hiddenLast = document.getElementById('hiddenRegionalLast').value;

            //index of the row to be added
            var hiddenRow = eval(hiddenLast) + 1;

            //set the value
            document.getElementById('hiddenRegionalLast').value = hiddenRow;
            rowCode = rowCode.replaceAll('_' + hiddenLast + '_', '_' + hiddenRow + '_');
            rowCode = rowCode.replaceAll('[' + hiddenLast + ']', '[' + hiddenRow + ']');
            rowCode = rowCode.replaceAll('-' + hiddenLast, '-' + hiddenRow);

            //insert the row
            var newRow = table.insertRow();
            newRow.innerHTML = rowCode;

            //get the respective button id
            var addButtonId = btn.id;

            var deleteButtonId = addButtonId.replaceAll('addRegional', 'removeRegional');

            //set the add buttons to visible
            var deleteButton = document.getElementById(deleteButtonId);
            deleteButton.classList.add("visible");
            deleteButton.classList.remove("invisible");

            //set the add buttons to invisible
            var addButton = document.getElementById(addButtonId);
            addButton.classList.remove("visible");
            addButton.classList.add("invisible");

        }

        function RemoveLocal(btn) {
            //$(btn).closest('tr').remove();
            var rows = table.getElementsByTagName('tr');
            $(btn).remove()
        }

        function AddLocal(btn) {
            //get the table id - select the table
            var table = document.getElementById('Local');
            //get the rows of the table
            var rowList = table.getElementsByTagName('tr');

            //get the last row's html code (actual last row)
            var rowCode = rowList[rowList.length - 1].outerHTML;


            //get the last row id - where to add the next row
            var hiddenLast = document.getElementById('hiddenLocalLast').value;

            //index of the row to be added
            var hiddenRow = eval(hiddenLast) + 1;

            //set the value
            document.getElementById('hiddenLocalLast').value = hiddenRow;
            rowCode = rowCode.replaceAll('_' + hiddenLast + '_', '_' + hiddenRow + '_');
            rowCode = rowCode.replaceAll('[' + hiddenLast + ']', '[' + hiddenRow + ']');
            rowCode = rowCode.replaceAll('-' + hiddenLast, '-' + hiddenRow);

            //insert the row
            var newRow = table.insertRow();
            newRow.innerHTML = rowCode;

            //get the respective button id
            var addButtonId = btn.id;

            var deleteButtonId = addButtonId.replaceAll('addLocal', 'removeLocal');

            //set the add buttons to visible
            var deleteButton = document.getElementById(deleteButtonId);
            deleteButton.classList.add("visible");
            deleteButton.classList.remove("invisible");

            //set the add buttons to invisible
            var addButton = document.getElementById(addButtonId);
            addButton.classList.remove("visible");
            addButton.classList.add("invisible");

        }
    </script>
    

}
